# Pull golang 1.12 image as base image
FROM golang:1.12 as builder

# Add Maintainer Information
LABEL maintainer="Prithvi Raj Moorani <pmoorani@gmail.com>"

# Set Environment Variables
ENV SECRET_KEY "TjWnZr4u7x!A%D*G-JaNdRgUkXp2s5v8"
ENV DB_HOST localhost
ENV DB_NAME books
ENV DB_USER postgres
ENV DB_PASSWORD mahesh
ENV DB_TYPE postgres
ENV DB_PORT 5432
ENV DB_SSLMode disable
ENV HOME /app
ENV CGO_ENABLED 0
ENV GOOS linux

# Set the current working directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY gox.mod go.sum ./

# Download all dependencies.
# Dependencies will be cached, if
# gox.mod and go.sum files are not changed.
RUN go mod download

# Copy the source from the current directory to the
# working directory inside the container
COPY . .

# Build the Go Application
RUN go build -a -installsuffix cgo -o main .

# Start a new stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the pre-built binary file from the previous stage
COPY --from=builder /app/main /app/.env ./

# Expose Port 8080 to the outside world
EXPOSE 8080

# Command to run the binary executable
CMD [ "./main" ]
