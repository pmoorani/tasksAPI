FROM golang:latest as builder

WORKDIR /app

COPY go.mod go.sum ./

RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o tms .


######## Start a new stage from scratch #######
FROM alpine:latest

RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /app/tms .
COPY --from=builder /app/configmap.yaml /etc/tms/config.yaml

# Expose port 8080 to the outside world
EXPOSE 8080

# Command to run the executable
#CMD ["./tms"]
CMD [ "./tms", "-config", "/etc/tms/config.yaml" ]
